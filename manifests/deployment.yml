---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: couchbase
  name: couchbase-init
data:
  "entrypoint.sh": |-
    #!/usr/bin/env bash
    set -euo pipefail

    # Retries a command on failure.
    # $1 - the max number of attempts
    # $2... - the command to run
    function retry() {
        local -r -i max_attempts="$1"; shift
        local -r cmd="$@"
        local -i attempt_num=1

        until $cmd
        do
            if (( attempt_num == max_attempts ))
            then
                echo -e "\nAttempt $attempt_num failed and there are no more attempts left!"
                exit 1
            else
                echo -e "\nAttempt $attempt_num failed! Trying again in $attempt_num seconds..."
                sleep $(( attempt_num++ ))
            fi
        done
    }
    
    retry 10 curl -u Administrator:password -s -w "%{http_code}" -o trash http://localhost:8091/pools/default/buckets/travel-sample

    TRAVEL_BUCKET_STATUS="$(curl -u Administrator:password -s -w "%{http_code}" -o trash http://localhost:8091/pools/default/buckets/travel-sample)"
    CARS_BUCKET_STATUS="$(curl -u Administrator:password -s -w "%{http_code}" -o trash http://localhost:8091/pools/default/buckets/cars)"

    if [ "$TRAVEL_BUCKET_STATUS" = "200" ]; then
      curl -X DELETE -u Administrator:password http://localhost:8091/pools/default/buckets/travel-sample
    elif [ "$TRAVEL_BUCKET_STATUS" = "404" ]; then
      echo -e "\ntravel bucket not found, will not delete."
    else
      echo -e "\nfailed to fetch travel bucket with code $TRAVEL_BUCKET_STATUS, exiting"
      exit 1
    fi

    if [ "$CARS_BUCKET_STATUS" = "404" ]; then
      echo -e "cars bucket did not exist, will create\n"
      curl -X POST -u Administrator:password http://localhost:8091/pools/default/buckets -d name=cars -d ramQuotaMB=512
    elif [  "$CARS_BUCKET_STATUS" =  "200" ]; then
      echo -e "\ncars bucket already exists, will skip creation"
    else
      echo -e "\nfailed to fetch car bucket with code $CARS_BUCKET_STATUS, exiting"
      exit 1
    fi

    sleep infinity
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: couchbase
  name: couchbase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: couchbase
  strategy: {}
  template:
    metadata:
      labels:
        app: couchbase
    spec:
      containers:
      - image: qpetraroia.azurecr.io/curl
        imagePullPolicy: IfNotPresent
        name: couchbase-init
        command: ["bash", "/data/entrypoint.sh"]
        resources: {}
        volumeMounts:
          - mountPath: /data
            name: couchbase-init
      - image: couchbase/server-sandbox:6.6.0
        name: couchbase
        ports:
        - containerPort: 8091
        - containerPort: 8092
        - containerPort: 8093
        - containerPort: 8094
        - containerPort: 11210
        resources: {}
      volumes:
        - name: couchbase-init
          configMap:
            name: couchbase-init
      terminationGracePeriodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: couchbase
  name: couchbase
spec:
  ports:
  - name: 8091-8091
    port: 8091
    protocol: TCP
    targetPort: 8091
  - name: 8092-8092
    port: 8092
    protocol: TCP
    targetPort: 8092
  - name: 8093-8093
    port: 8093
    protocol: TCP
    targetPort: 8093
  - name: 8094-8094
    port: 8094
    protocol: TCP
    targetPort: 8094
  - name: 11210-11210
    port: 11210
    protocol: TCP
    targetPort: 11210
  selector:
    app: couchbase
  type: ClusterIP
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: cardata
spec:
  selector:
    matchLabels:
      app: cardata
  replicas: 1 # tells deployment to run # pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: cardata
    spec:
      containers:
      - name: go-web-app
        image: qpetraroia.azurecr.io/go-web-app
        imagePullPolicy: Always
        ports:
        - containerPort: 12345
          name: server
        env:
        - name: DB_HOST
          value: couchbase
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: cardata
spec:
  ports:
  - port: 80
    targetPort: 12345
    protocol: TCP
  selector:
    app: cardata
  type: LoadBalancer
---
